@startuml
package "BehaviourPlanner" #DDDDDD{
class BehavoiurPlanner{
   -std::unique_ptr<BehavoirStrategy> behaviour_strategy
   +BehavoiurPlanner(const std::string& type)
   #Process(const TrajectoryPoint& init_point, Behaviour& behaviour):bool
 }

abstract class BehavoirStrategy{
  {abstract} + Execute(const TrajectoryPoint& init_point, Behaviour& behaviour) :bool;
}

class MDPMPlanner{
  +MDPMPlanner()
}

class EDUMPlanner{
  +EDUMPlanner()

}
class POMDPPlanner{
 +POMDPPlanner()
}
POMDPPlanner--->BehavoirStrategy
MDPMPlanner--->BehavoirStrategy
EDUMPlanner--->BehavoirStrategy
BehavoiurPlanner...>POMDPPlanner
BehavoiurPlanner...> MDPMPlanner
BehavoiurPlanner...> EDUMPlanner
BehavoiurPlanner o----BehavoirStrategy
BehavoiurPlanner ... Agent
BehavoiurPlanner*---Behaviour
}

package "Behaviour" #DDDDDD{

enum LatBehaviour{
 LK
 LCL
 LCR
}
enum LonBehaviour{
 ACC
 MAINTAIN
 DECEL
 STOPPING
}

class Behaviour{
  ReferenceLine ref_line_;
  LatBehaviour lat_behaviour_;
  LonBehaviour lon_behaviour_;
  std::vector<LatBehaviour> forward_behaviour_;
  std::vector<std::unordered_map<int, planning_msgs::Trajectory>> surrounding_trajs_;
  double desired_vel_;
}
}

package "Agent" #DDDDDD{




Behaviour -- LatBehaviour
Behaviour -- LonBehaviour
abstract class Agent{
  #std::array<double, 3> state_;
  #LatBehaviour max_behaviour_;
  #common::Box2d bounding_box_;
  #LatBehaviour lat_behaviour_;
  +Agent()
}

class EgoVehicleAgent{

}

class ObstacleAgent{
 -bool is_virtual_;
 -bool is_static_;
}

class STGraph{

+STGraph(const Agent& agent, const ReferenceLine& ref_line)

}

STGraph ... Agent
Agent<--EgoVehicleAgent
Agent<--ObstacleAgent
Agent--- LatBehaviour
}
package "MotionPlanner" #DDDDDD{

class MotionPlanner{
 # std::unique_ptr<MotionPlanStrategy> motion_strategy_;
 +MotionPlanner(const std::string& type)
 +bool Process(const TrajectoryPoint& init_point, const Behaviour& behaviour, Trajectory& traj)
}

abstract class MotionPlanStrategy{
+bool Execute(const TrajectoryPoint& init_point, const Behaviour& behaviour, Trajectory& traj)
}

class FrenetLatticePlanner{

}

class PVDPlanner{
}
FrenetLatticePlanner-->MotionPlanStrategy
PVDPlanner-->MotionPlanStrategy
MotionPlanner...>FrenetLatticePlanner
MotionPlanner...> PVDPlanner
MotionPlanner o--- MotionPlanStrategy

MotionPlanner ... Agent
MotionPlanner ... Behaviour
}



@enduml